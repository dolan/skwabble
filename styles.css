:root { 
    --cell-size: min(40px, calc((100vw - 40px) / 17));  /* Responsive cell size */
}

body { 
    font-family: system-ui; 
    display: flex; 
    flex-direction: row;
    gap: 2rem;
    padding: 20px;
    margin: 0;
    min-height: 100vh;
    background: #f5f5f5;
}

@media (max-width: 768px) {
    body {
        flex-direction: column;
    }
}

#board { 
    display: grid; 
    gap: 2px; 
    background: #225588; 
    padding: 10px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    /* Make board size responsive and include gaps in total width */
    width: calc(15 * var(--cell-size) + 28px);  /* 28px = 14 gaps * 2px + 20px padding */
    height: calc(15 * var(--cell-size) + 28px);
    grid-template-columns: repeat(15, var(--cell-size));
    grid-template-rows: repeat(15, var(--cell-size));
}

.cell { 
    width: var(--cell-size); 
    height: var(--cell-size);
    border: 1px solid #666; 
    display: flex;
    justify-content: center; 
    align-items: center;
    background: #f0f0f0; 
    font-size: 0.8em;
    position: relative;
    box-shadow: inset 0 0 2px rgba(0,0,0,0.1);
    margin: 0;
}

.cell.dragover {
    background: #e0e0ff;
    box-shadow: inset 0 0 4px rgba(0,0,255,0.3);
}

.bonus::after {
    content: attr(data-bonus);
    position: absolute; 
    bottom: 2px; 
    right: 2px;
    font-size: 0.6em; 
    color: #666;
}

.bonus[data-bonus^="2W"],
.bonus[data-bonus^="3W"] {
    background: #ffebf3;  /* Light pink for word multipliers */
}

.bonus[data-bonus^="2L"],
.bonus[data-bonus^="3L"] {
    background: #e6f3ff;  /* Light blue for letter multipliers */
}

.tile { 
    background: #ffd; 
    border: 1px solid #ca8;
    cursor: pointer; 
    user-select: none;
    width: calc(var(--cell-size) - 8px);
    height: calc(var(--cell-size) - 8px);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    box-shadow: 1px 1px 2px rgba(0,0,0,0.2);
    transition: transform 0.1s ease-in-out;
    position: relative;
}

.tile span:first-child {
    font-size: 1.2em;
    line-height: 1;
    position: relative;
    z-index: 1;
}

.tile .points {
    position: absolute;
    bottom: 1px;
    right: 1px;
    font-size: 0.7em;
    color: #666;
    background: rgba(255, 255, 255, 0.7);
    padding: 1px;
    border-radius: 2px;
    min-width: 8px;
    height: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 0;
}

.tile.placed {
    cursor: default;
    background: #ffe;
    box-shadow: none;
    border-color: #986;
}

.tile.placed .points {
    background: rgba(255, 255, 238, 0.8);
}

.tile.selected {
    background: #ffa;
    box-shadow: 0 0 4px rgba(0,0,0,0.4);
    transform: scale(1.1);
}

#controls { 
    display: flex; 
    flex-direction: column; 
    gap: 1rem;
    min-width: 200px;
    position: sticky;
    top: 20px;
}

#status {
    background: #225588;
    color: white;
    padding: 16px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    min-height: 60px;
    position: sticky;
    top: 0;
    display: flex;
    flex-direction: column;
    gap: 8px;
}

#score {
    font-size: 1.4em;
    font-weight: bold;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
}

#message {
    font-size: 0.9em;
    opacity: 0.9;
}

#tray {
    display: flex;
    gap: 4px;
    padding: 15px;
    background: #fff;
    border-radius: 8px;
    min-height: var(--cell-size);
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    flex-wrap: wrap;
}

.button-group {
    display: flex;
    gap: 8px;
}

button {
    padding: 10px 20px;
    font-size: 1em;
    cursor: pointer;
    background: white;
    border: none;
    border-radius: 4px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    transition: all 0.2s ease;
    flex: 1;
}

button:hover {
    background: #f0f0f0;
    transform: translateY(-1px);
    box-shadow: 0 3px 6px rgba(0,0,0,0.15);
}

button:active {
    transform: translateY(0);
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
} 